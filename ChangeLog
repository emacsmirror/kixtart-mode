* Version 1.4.0 (????-??-??)

Removed support for Emacs 27.

* Version 1.3.5 (2024-12-31)

Imenu index entries for global variable definitions now refer to the
buffer position which begins the expression that defines the variable
rather than the buffer position that defines the variable name.

The generation of the Imenu index will now consider the customization
variable `imenu-use-markers' and use markers instead of buffer
positions when appropriate.

Fixed the operation of the internal major mode parsing when
`case-fold-search' has been customized to nil.

* Version 1.3.4 (2024-12-10)

The type for the customization variable `kixtart-eldoc-echo-truncate'
is now set to natnum instead of integer.

The type for the `position' slot of the `kixtart-block' structure is
now set to natnum instead of integer.

The type for the `type' slot of the `kixtart-doc-macro' structure is
now set to natnum instead of integer.

* Version 1.3.3 (2024-11-01)

An error will now be signaled when attempting to resolve an unknown
KiXtart type ID to a type name.  Previously the type would have been
presented as "nil".

An error will now be signaled for unknown symbols set in the `final'
slot of documentation structures.  Previously an unknown symbol would
have given the same behavior as setting the slot value to `t'.

The default value of the customization variable
`kixtart-which-function-default-name' is now set to nil.  This has
been changed because the default string of `which-function-mode' was
improved from "???" to "n/a" to appear less like an error.  The
previous behavior can be restored by setting the value back to "-":

  (setq kixtart-which-function-default-name "-")

Fixed compilation warnings when using the old version of ElDoc.

Fixed ElDoc documentation lookup and the associated compilation
warning for Emacs 27 and 28.

Added customization variable `kixtart-completion-case-fold' which
determines whether KiXtart completion matching is case-sensitive.

The recommendation of using the external Cape package to combine
KiXtart syntax completion with TAGS completions has been replaced by
an example of modifying the completions list using the new function
`kixtart-completion-include-tags'.

Added customization variable `kixtart-imenu-submenu-prefix' which can
be used to configure the string prefix used for Imenu submenu names.

Added support for `electric-layout-mode' where it supports inserting
newlines into a comment.  When enabled, the mode will automatically
insert a newline following the special comment which indicates a
multi-line expression.

Imenu data now includes the variable names for variables which were
defined with global scope.

* Version 1.3.2 (2024-09-01)

Fixed returning a documentation string for a macro which was defined
without type information.

Implemented multi-level font-locking.  It may be preferable to use
font-lock level 2 which reduces the amount of highlighting by only
matching on internal commands, functions, and macros.

* Version 1.3.1 (2024-03-23)

Fixed the date on the previous ChangeLog entry.

Documented that ElDoc version 1.14.0 or newer is required for the
customization option `kixtart-eldoc-echo-truncate' to work correctly.

Added functionality to evaluate strings as scripts, by executing them
in a KiXtart interpreter.  This allows evaluation of the active
region, the entire buffer, or a string entered at a minibuffer prompt.

The html make target now defaults to creating a single HTML file
without node separators and menus.

* Version 1.3.0 (2024-03-18)

Fixed parsing error when calling indentation functions with point
inside a comment.

Added ElDoc support to display documentation for KiXtart symbols at or
near point.

The syntax classification for the "?" character is now applied
dynamically based on symbol boundaries.  Discrete groups of "?"
characters are now considered to be a symbol, while "?" characters
which are adjacent to other symbol characters retain the previous
behavior of being classification as punctuation.  Font-lock rules will
now only apply syntax highlighting to "?" characters which are
classified as symbols to provide a visual indicator of the
classification.  To restore the previous behavior where all "?"
characters are highlighted, it is possible to add an additional
font-lock rule to cover this case:

  (font-lock-add-keywords 'kixtart-mode
                          '(("?" . 'kixtart-command-face)) t)

Added completion-at-point support for built-in KiXtart syntax
(commands, functions, and macros).

The package commentary is now converted into Texinfo format as a
separate manual.

The custom Makefile is replaced with GNU Autotools.  A release of the
package now provides an installable archive which includes a pre-built
copy of the new Info manual.

* Version 1.2.0 (2024-01-01)

Fixed indentation for hanging CASE and ELSE commands.

The function `kixtart-up-script-block' can now be repeated with the
repeat-map binding {u}.

Unless the value of the new customization variable
`kixtart-block-motion-push-mark' has been customized to nil the
function `kixtart-up-script-block' now pushes the previous location to
the mark ring when the value of point is modified.

Font-locking now uses custom faces which inherit from the previously
used default font-lock faces.

The command `kixtart-close-command-block' now re-indents the current
line when KiXtart commands are inserted or removed from the buffer.

The command `kixtart-close-command-block' prints a message when point
is not within an open command block.

Fixed indentation not being applied to the first line of syntax in the
buffer.

* Version 1.1.1 (2023-03-14)

Fixed retrieving the current function name when the buffer is
narrowed.

Fixed incorrect multi-line fontification of a symbol as a function
name when the word "function" appeared within a previous comment.

* Version 1.1.0 (2023-02-17)

Fontification for function names now works where the function name
appears on a later line than the FUNCTION command.

The Imenu index now includes functions where the function name appears
on a later line than the FUNCTION command.

The Imenu index entries for labels now have the ":" prefix removed.

Macros are now fontified with the `font-lock-preprocessor-face' face.

Font-lock rules now includes a match for object properties, fontified
using the `font-lock-type-face' face.  This addition helps to reduce
the chance of incorrect font-lock highlighting performed by later
rules.

The function `kixtart-current-defun' is now available to return the
name of the user-defined KiXtart function which currently surrounds
point.

Support was added for `add-log' functions, which allow the current
function name to be automatically added to change log entries.

Support was added for `which-function-mode', a minor mode which
displays the current function name in the mode-line.

Fixed the use of multi-line comment indicators at the beginning of the
buffer and within strings.

Fixed the use of multi-line separators within strings.

* Version 1.0.0 (2022-12-04)

Initial release.
